plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'nu.studer.jooq' version '9.0'
    id 'org.flywaydb.flyway' version '10.20.1'
}

group = 'com.example.toygry'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    // Removed explicit Nimbus dependency as it's included in spring-boot-starter-oauth2-resource-server

    implementation 'org.flywaydb:flyway-core'

    // jooq => 충돌 때문에 일부러 버전 넣었음
    implementation 'org.jooq:jooq:3.19.21'
    jooqGenerator 'org.jooq:jooq-codegen:3.19.21'
    jooqGenerator 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jooq {
    version = '3.19.21'
    configurations {
        main {
            generateSchemaSourceOnCompilation = true // ✅ compile 시 코드 자동 생성

            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN

                jdbc {
                    driver = 'org.h2.Driver'
                    url = "jdbc:h2:file:${projectDir}/data/testdb;MODE=PostgreSQL;AUTO_SERVER=TRUE"
                    user = 'sa'
                    password = ''
                }

                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'

                    database {
                        name = 'org.jooq.meta.h2.H2Database'
                        inputSchema = 'PUBLIC'

                        excludes = 'flyway_schema_history'
                    }

                    generate {
                        deprecated = false
                        records = true
                        immutablePojos = true
                        fluentSetters = true
                        daos = true
                    }

                    target {
                        packageName = 'com.example.toygry.one_you.jooq.generated'
                        directory = 'build/generated-sources/jooq'
                    }

                    strategy {
                        name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                    }
                }
            }
        }
    }
}

flyway {
    url = "jdbc:h2:file:${projectDir}/data/testdb;MODE=PostgreSQL"
    user = "sa"
    password = ""
    locations = ["filesystem:src/main/resources/db/migration"]
}


tasks.named('test') {
    useJUnitPlatform()
}
