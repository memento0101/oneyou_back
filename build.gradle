plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'nu.studer.jooq' version '9.0'
}

group = 'com.example.toygry'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    // Removed explicit Nimbus dependency as it's included in spring-boot-starter-oauth2-resource-server

    // SpringDoc OpenAPI for Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'

    // jooq => 충돌 때문에 일부러 버전 넣었음
    implementation 'org.jooq:jooq:3.19.21'
    jooqGenerator 'org.jooq:jooq-codegen:3.19.21'
    jooqGenerator 'org.postgresql:postgresql'

    // websocket 관련 설정
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.webjars:sockjs-client:1.5.1'
    implementation 'org.webjars:stomp-websocket:2.3.4'

    // Redis 관련 설정
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jooq {
    version = '3.19.21'
    configurations {
        main {
            generateSchemaSourceOnCompilation = true // ✅ compile 시 코드 자동 생성

            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN

                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = System.getProperty('jooq.db.url', 'jdbc:postgresql://localhost:5432/one_you')
                    user = System.getProperty('jooq.db.user', 'test')
                    password = System.getProperty('jooq.db.password', 'test')
                }

                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'

                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'public'
                    }

                        generate {
                            deprecated = false
                            records = true
                            immutablePojos = true
                            fluentSetters = true
                            daos = true
                        }

                        target {
                            packageName = 'com.example.toygry.one_you.jooq.generated'
                            directory = 'build/generated-sources/jooq'
                        }

                        strategy {
                            name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                        }
                    }
                }
            }
        }
    }


tasks.named('test') {
    useJUnitPlatform()
}